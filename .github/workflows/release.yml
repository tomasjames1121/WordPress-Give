name: Deploy to WordPress.org

on:
  release:
    types: [ released ]
    
jobs:
  tests:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        php: [ 5.6, 7.2 ]
        mysql: [ 'mysql:5.6', 'mysql:8.0' ]
        wordpress: [ '4.9', '5.0', '5.1', '5.2', '5.3', '5.4', '5.5', latest ]

    steps:
      - uses: actions/checkout@v2

      -   name: Cache dependencies
          uses: actions/cache@v1
          with:
            path: ~/.composer/cache/files
            key: dependencies-php-${{ matrix.php }}-composer-${{ hashFiles('composer.json') }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, mysql, mysqli, pdo_mysql, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo
          coverage: none

      - name: Install dependencies
        run: |
          composer self-update --1
          composer require phpunit/phpunit:5.*
          composer update --prefer-dist --no-interaction --no-suggest

      - name: Store MySQL details in environment
        run: |
          case "$MYSQL_VERSION" in
            'mysql:5.6')
              MYSQL_PORT=${{ job.services.mysql56.ports[3306] }}
              MYSQL_PASS=root
              ;;
            'mysql:8.0')
              MYSQL_PORT=${{ job.services.mysql80.ports[3306] }}
              MYSQL_PASS=N0Tweak!@123!
              ;;
          esac
          echo "mysql_port=$MYSQL_PORT" >> $GITHUB_ENV
          echo "mysql_pass=$MYSQL_PASS" >> $GITHUB_ENV
        env:
          MYSQL_VERSION: ${{ matrix.mysql }}

      - name: Set Up Tests
        run: bash tests/unit/bin/install.sh wordpress_test root ${{ env.mysql_pass }} 127.0.0.1:${{ env.mysql_port }} ${{ matrix.wordpress }}

      - name: Run Tests
        run: php -d memory_limit=-1 vendor/bin/phpunit
        env:
          DB_PORT: ${{ env.mysql_port }}

  release:
    name: New release
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Install composer dependencies
        uses: php-actions/composer@v2
        with:
          dev: no

      - uses: actions/setup-node@v1
        with:
          node-version: '12'

      - name: Install npm dependencies
        run: |
          npm install -g npm@7
          npm ci
          sudo npm run build
          
      - name: WordPress Plugin Deploy
        id: deploy
        uses: 10up/action-wordpress-plugin-deploy@stable
        with:
          generate-zip: true
        env:
          SVN_USERNAME: ${{ secrets.SVN_USERNAME }}
          SVN_PASSWORD: ${{ secrets.SVN_PASSWORD }}
          SLUG: give
          
      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{github.workspace}}/give.zip
          asset_name: give.zip
          asset_content_type: application/zip
