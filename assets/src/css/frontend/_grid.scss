/**
 * Give Frontend Grid SCSS
 *
 * @package     Give
 * @subpackage  SCSS/Frontend
 * @copyright   Copyright (c) 2018, GiveWP
 * @license     http://opensource.org/licenses/gpl-2.0.php GNU Public License
*/

// Fallback styles for old browsers that do not support CSS Grid.
.give-grid {
	max-width: 30rem;

	&__item {
		margin-bottom: 1.5rem;
		width: 100%;

		> :last-child {
			margin-bottom: 0;
		}
	}
}

.give-wrap {
	&:before {
		display: block;
		content: '';
		clear: both;
	}
}

@media ( min-width: 30rem ) {
	.give-grid {
		display: flex;
		flex-flow: row wrap;
		margin-bottom: 1.5rem;
		max-width: 100%;

		&__item {
			padding: 0 .75rem;
			display: flex;
		}

		&--2,
		&--3,
		&--4 {
			.give-grid__item {
				@media ( min-width: 40rem ) {
					width: 50%;
				}
			}
		}

		&--3,
		&--4 {
			.give-grid__item {
				@media ( min-width: 72rem ) {
					width: calc( 100% / 3 );
				}
			}
		}

		&--4 {
			.give-grid__item {
				@media ( min-width: 90rem ) {
					width: 25%;
				}
			}
		}
	}
}

// Modern styles for browsers that support CSS Grid.
@supports (display: grid) {
	.give-grid {
		display: grid;
		grid-template-columns: 1fr;
		grid-gap: 1.5rem;
		margin-bottom: 1.5rem;
		max-width: 100%;

		&__item {
			display: flex;
			margin-bottom: 0;
			padding: 0;
			width: auto !important;
		}

		// Fit as many columns as possible in the available space.
		&--best-fit {
			@media ( min-width: 40rem ) {
				grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
			}
		}

		// Limit the number of columns to an explicit user-defined number.
		&--2,
		&--3,
		&--4 {
			@media ( min-width: 40rem ) {
				grid-template-columns: repeat(2, 1fr);
			}
		}

		&--3,
		&--4 {
			@media ( min-width: 72rem ) {
				grid-template-columns: repeat(3, 1fr);
			}
		}

		&--4 {
			@media ( min-width: 90rem ) {
				grid-template-columns: repeat(4, 1fr);
			}
		}
	}
}
